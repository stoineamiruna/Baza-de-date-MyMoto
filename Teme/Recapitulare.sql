--LAB1

--7

SELECT
    E.FIRST_NAME||', '||E.JOB_ID AS "Angajat si titlu"
FROM EMPLOYEES E;

--10
SELECT
    E.FIRST_NAME, E.SALARY
FROM EMPLOYEES E
WHERE E.SALARY NOT BETWEEN 1500 AND 1850;

SELECT
    E.FIRST_NAME, E.SALARY
FROM EMPLOYEES E
WHERE E.SALARY NOT IN (1500,1850);

--11

SELECT
    E.FIRST_NAME, E.JOB_ID, E.HIRE_DATE
FROM EMPLOYEES E
WHERE E.HIRE_DATE BETWEEN '20-FEB-87' AND '01-MAY-89'
ORDER BY E.HIRE_DATE;

--12

SELECT
    E.EMPLOYEE_ID, E.DEPARTMENT_ID, (
        SELECT
            SYSDATE
        FROM DUAL)
FROM EMPLOYEES E
WHERE E.DEPARTMENT_ID=10 OR E.DEPARTMENT_ID=30
ORDER BY E.FIRST_NAME;



--LAB2

--1

SELECT
    E.FIRST_NAME||' '||E.LAST_NAME||' CASTIGA '||TO_CHAR(E.SALARY)||' DAR DORESTE '||TO_CHAR(E.SALARY*3) AS "SAALRIU IDEAL"
FROM EMPLOYEES E;

SELECT
    E.FIRST_NAME,E.LAST_NAME,TO_CHAR(E.SALARY),TO_CHAR(E.SALARY*3) 
FROM EMPLOYEES E;

--2

SELECT
    INITCAP(E.FIRST_NAME), UPPER(E.LAST_NAME), LENGTH(E.LAST_NAME)
FROM EMPLOYEES E;

--4

SELECT
    INSTR(UPPER(E.LAST_NAME),'A')
FROM EMPLOYEES E
WHERE UPPER(E.LAST_NAME) LIKE '%E';

--5

SELECT 
    TO_NUMBER(TO_CHAR(ROUND(E.HIRE_DATE),'DD'))-(
                            SELECT
                                TO_NUMBER(TO_CHAR(ROUND(SYSDATE),'DD'))
                            FROM DUAL
                            )
FROM EMPLOYEES E
WHERE MOD((
            SELECT
                TO_NUMBER(TO_CHAR(ROUND(SYSDATE),'DD'))
            FROM DUAL
            )-TO_NUMBER(TO_CHAR(ROUND(E.HIRE_DATE),'DD')),7)=0;
            
    
--6
SELECT
    E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, TO_CHAR(SALARY + SALARY * 15/100,'999999.99'), FLOOR(ROUND(TRUNC(E.SALARY*1.15,2),2)/100)
FROM EMPLOYEES E;

--7
SELECT
    E.FIRST_NAME, E.SALARY, LPAD(' ',FLOOR(E.SALARY/1000)+1, '$')
FROM EMPLOYEES E;

--8
SELECT
    SYSDATE+30
FROM DUAL;

--9

SELECT
    TO_DATE('31-DEC-2023')-SYSDATE
FROM DUAL;

--10

SELECT
    SYSDATE+1/2
FROM DUAL;

SELECT
    SYSDATE+5/24/60
FROM DUAL;

--11

SELECT
    E.FIRST_NAME, E.HIRE_DATE,
    NEXT_DAY(ADD_MONTHS(HIRE_DATE, 6), 'MONDAY')
FROM EMPLOYEES E;

--13

SELECT
    E.FIRST_NAME, E.HIRE_DATE,
    TO_CHAR(E.HIRE_DATE, 'DAY'), TO_NUMBER(TO_CHAR(E.HIRE_DATE, 'D'))
FROM EMPLOYEES E
ORDER BY MOD(TO_NUMBER(TO_CHAR(E.HIRE_DATE, 'D'))+5,7);

--14
SELECT
    E.FIRST_NAME, DECODE(E.COMMISSION_PCT,E.COMMISSION_PCT,(E.COMMISSION_PCT IS NOT NULL),'NU ARE')
FROM EMPLOYEES E;

SELECT
    E.FIRST_NAME,
    (
        CASE
            WHEN E.COMMISSION_PCT<>0 THEN E.COMMISSION_PCT
            ELSE 'NU ARE'
        END
    )
FROM EMPLOYEES E;

--LAB 8

--6

SELECT *
FROM EMPLOYEES E
WHERE 0<>(
    SELECT
        COUNT(E1.EMPLOYEE_ID)
    FROM EMPLOYEES E1
    WHERE E1.DEPARTMENT_ID=E.DEPARTMENT_ID AND E1.EMPLOYEE_ID<>E.EMPLOYEE_ID AND UPPER(E.FIRST_NAME) LIKE '%T'
    );
    
--8

SELECT
    D.DEPARTMENT_ID, D.DEPARTMENT_NAME, E.FIRST_NAME, E.JOB_ID
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
WHERE UPPER(D.DEPARTMENT_NAME) LIKE '%TI%'
ORDER BY D.DEPARTMENT_NAME;

--LAB 6

--1

SELECT
    E.FIRST_NAME, E.SALARY
FROM EMPLOYEES E 
WHERE E.DEPARTMENT_ID=(
    SELECT
        E1.DEPARTMENT_ID
    FROM EMPLOYEES E1
    WHERE UPPER(E1.LAST_NAME)='GATES'
    ) AND UPPER(E.LAST_NAME)<>'GATES';
    
--6

SELECT 
    E.FIRST_NAME, D.DEPARTMENT_NAME, E.SALARY
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
WHERE E.COMMISSION_PCT IS NULL AND E.MANAGER_ID IN (
    SELECT
        E1.MANAGER_ID
    FROM EMPLOYEES E1
    JOIN EMPLOYEES E2 ON E2.EMPLOYEE_ID=E1.MANAGER_ID
    WHERE E2.COMMISSION_PCT IS NOT NULL
    );
--8

SELECT
    D.DEPARTMENT_NAME, (
        SELECT
            E.FIRST_NAME
        FROM EMPLOYEES E
        WHERE E.DEPARTMENT_ID=D.DEPARTMENT_ID AND E.SALARY>= ALL(
            SELECT
                E1.SALARY
            FROM EMPLOYEES E1
            WHERE E1.DEPARTMENT_ID=D.DEPARTMENT_ID
            )
        )
FROM DEPARTMENTS D;

SELECT
    *
FROM(
    SELECT
        E.SALARY, E.FIRST_NAME
    FROM EMPLOYEES E
    ORDER BY E.SALARY DESC)
WHERE ROWNUM<=7;

--9

SELECT 
    E1.FIRST_NAME
FROM EMPLOYEES E1
WHERE E1.SALARY IN (
    SELECT *
    FROM(
        SELECT
            E.SALARY
        FROM EMPLOYEES E
        ORDER BY E.SALARY DESC)
    WHERE ROWNUM<=7
    );
    
--11
SELECT *
FROM EMPLOYEES E
WHERE E.SALARY=(
    SELECT *
    FROM (
        SELECT *
        FROM(
            SELECT
                E1.SALARY
            FROM EMPLOYEES E1
            ORDER BY E1.SALARY DESC
            )
        WHERE ROWNUM<=7
        ORDER BY SALARY
        )
    WHERE ROWNUM=1
    ) OR E.SALARY=(
    SELECT *
    FROM (
        SELECT *
        FROM(
            SELECT
                E2.SALARY
            FROM EMPLOYEES E2
            ORDER BY E2.SALARY DESC
            )
        WHERE ROWNUM<=41
        ORDER BY SALARY
        )
    WHERE ROWNUM=1
    );
    
    
--LAB7

--1

SELECT
    COUNT(DISTINCT E.MANAGER_ID)
FROM EMPLOYEES E;

SELECT
    COUNT(DISTINCT E.MANAGER_ID)
FROM EMPLOYEES E
GROUP BY E.MANAGER_ID;


SELECT
    COUNT(T.MANAGER_ID)
FROM (
        SELECT
            DISTINCT E.MANAGER_ID
        FROM EMPLOYEES E
    ) T;
--2

SELECT
    D.DEPARTMENT_NAME, D.LOCATION_ID, COUNT(E.EMPLOYEE_ID), AVG(NVL(E.SALARY,0))
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME, D.LOCATION_ID;

SELECT
    D.DEPARTMENT_NAME, D.LOCATION_ID, COUNT(E.EMPLOYEE_ID), AVG(E.SALARY)
FROM EMPLOYEES E
JOIN DEPARTMENTS D on E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME, D.LOCATION_ID;
--3

SELECT *
FROM EMPLOYEES E
WHERE E.SALARY>(
    SELECT
        AVG(NVL(E1.SALARY,0))
    FROM EMPLOYEES E1);

SELECT
    E.EMPLOYEE_ID, E.FIRST_NAME
FROM EMPLOYEES E
WHERE E.SALARY > (
        SELECT
            AVG(E2.SALARY)
        FROM EMPLOYEES E2
    );
--4

SELECT
    E.MANAGER_ID, 
    (SELECT
        AVG(NVL(E2.SALARY,0))
     FROM EMPLOYEES E2 
     WHERE E2.MANAGER_ID=E.MANAGER_ID
     )
FROM EMPLOYEES E
JOIN EMPLOYEES E1 ON E1.EMPLOYEE_ID=E.MANAGER_ID
WHERE E1.MANAGER_ID IS NOT NULL
GROUP BY E.MANAGER_ID
HAVING MIN(E.SALARY) > 4000;

SELECT
    E.MANAGER_ID, MIN(E.SALARY)
FROM EMPLOYEES E
WHERE E.MANAGER_ID IS NOT NULL
GROUP BY E.MANAGER_ID
HAVING MIN(E.SALARY) > 4000;

--5

SELECT
    MAX(AVG(NVL(E.SALARY,0)))
FROM EMPLOYEES E
GROUP BY E.DEPARTMENT_ID;

SELECT
    MAX(AVG(E.SALARY))
FROM EMPLOYEES E
GROUP BY E.DEPARTMENT_ID;
--6

SELECT
    L.CITY, D.DEPARTMENT_NAME, E.JOB_ID, SUM(E.SALARY)
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID=L.LOCATION_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.CITY, E.JOB_ID
HAVING E.DEPARTMENT_ID>80;

SELECT
    E.DEPARTMENT_ID, E.JOB_ID, SUM(E.SALARY)
FROM EMPLOYEES E
WHERE E.DEPARTMENT_ID > 80
GROUP BY E.DEPARTMENT_ID, E.JOB_ID;
--7

SELECT
    AVG(NVL(E.COMMISSION_PCT,0))
FROM EMPLOYEES E;

SELECT AVG(NVL(commission_pct, 0))
FROM employees;
--8

SELECT
    E.DEPARTMENT_ID, D.DEPARTMENT_NAME,COUNT(E.EMPLOYEE_ID)
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME
HAVING COUNT(E.EMPLOYEE_ID)<4;

SELECT
    D.DEPARTMENT_NAME, COUNT(E.EMPLOYEE_ID)
FROM EMPLOYEES E
JOIN DEPARTMENTS D on D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME
HAVING COUNT(E.EMPLOYEE_ID) < 4;
--9

SELECT
    E.JOB_ID, J.JOB_TITLE, AVG(NVL(E.SALARY,0))
FROM EMPLOYEES E
JOIN JOBS J ON J.JOB_ID=E.JOB_ID
GROUP BY E.JOB_ID, J.JOB_TITLE
HAVING AVG(NVL(E.SALARY,0))=(
    SELECT
        MIN(AVG(NVL(E1.SALARY,0)))
    FROM EMPLOYEES E1
    GROUP BY E1.JOB_ID
    );
    
SELECT
    E.JOB_ID, AVG(E.SALARY)
FROM EMPLOYEES E
GROUP BY E.JOB_ID
HAVING AVG(E.SALARY) = (
        SELECT
            MIN(AVG(E.SALARY))
        FROM EMPLOYEES E
        GROUP BY E.JOB_ID
    );
    
--10

SELECT
    E.DEPARTMENT_ID, D.DEPARTMENT_NAME,MIN(E.SALARY)
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME
HAVING AVG(NVL(E.SALARY,0))=(
    SELECT
        MAX(AVG(NVL(E1.SALARY,0)))
    FROM EMPLOYEES E1
    GROUP BY E1.DEPARTMENT_ID
    );
    
SELECT
    D.DEPARTMENT_NAME, MIN(E.SALARY)
FROM EMPLOYEES E
JOIN DEPARTMENTS D on D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME
HAVING AVG(E.SALARY) = (
    SELECT
        MAX(AVG(SALARY))
    FROM EMPLOYEES
    GROUP BY DEPARTMENT_ID
    );

--11

SELECT
    *
FROM EMPLOYEES E
WHERE TO_CHAR(E.HIRE_DATE,'DD')=(
    SELECT
        TO_CHAR(E1.HIRE_DATE,'DD')
    FROM EMPLOYEES E1
    GROUP BY TO_CHAR(E1.HIRE_DATE,'DD')
    HAVING COUNT(E1.EMPLOYEE_ID)=(
        SELECT
            MAX(COUNT(E2.EMPLOYEE_ID))
        FROM EMPLOYEES E2
        GROUP BY TO_CHAR(E2.HIRE_DATE,'DD')
        )
    );

SELECT
    *
FROM EMPLOYEES E1
WHERE TO_CHAR(E1.HIRE_DATE,'DD') = (
        SELECT
            TO_CHAR(E.HIRE_DATE,'DD')
        FROM EMPLOYEES E
        GROUP BY TO_CHAR(E.HIRE_DATE,'DD')
        HAVING COUNT(E.EMPLOYEE_ID) = (
                SELECT
                       MAX(COUNT(E2.EMPLOYEE_ID))
                FROM EMPLOYEES E2
                GROUP BY TO_CHAR(E2.HIRE_DATE,'DD')
            )
    );
--12

SELECT
    D.DEPARTMENT_ID, D.DEPARTMENT_NAME,
    (
        SELECT
            COUNT(E1.EMPLOYEE_ID)
        FROM EMPLOYEES E1
        WHERE E1.DEPARTMENT_ID=E.DEPARTMENT_ID
        ) NR_ANGAJATI
    ,E.FIRST_NAME, E.SALARY,E.JOB_ID
FROM EMPLOYEES E
RIGHT JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID;

SELECT
    T.DEPARTMENT_ID, D.DEPARTMENT_NAME, T.CNT, T.SAL, E.EMPLOYEE_ID, E.SALARY, E.JOB_ID
FROM EMPLOYEES E
JOIN (
        SELECT
            E2.DEPARTMENT_ID, COUNT(*) CNT, AVG(E2.SALARY) SAL
        FROM EMPLOYEES E2
        GROUP BY E2.DEPARTMENT_ID
    )T ON E.DEPARTMENT_ID = T.DEPARTMENT_ID
JOIN DEPARTMENTS D on E.DEPARTMENT_ID = D.DEPARTMENT_ID;


--LAB 8

--1

SELECT
    E.FIRST_NAME
FROM EMPLOYEES E
WHERE EXISTS (
    SELECT *
    FROM EMPLOYEES E1
    WHERE E1.DEPARTMENT_ID=E.DEPARTMENT_ID);
    
--2

SELECT
    E.FIRST_NAME, E.LAST_NAME, E.EMPLOYEE_ID
FROM EMPLOYEES E
WHERE 2<=(
        SELECT
            COUNT(*)
        FROM EMPLOYEES E1
        START WITH E1.EMPLOYEE_ID = E.EMPLOYEE_ID
        CONNECT BY PRIOR E1.MANAGER_ID=E1.EMPLOYEE_ID
    );
    
--3

--a
SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, LEVEL+1
FROM EMPLOYEES E
JOIN EMPLOYEES E1 ON E.MANAGER_ID=E1.EMPLOYEE_ID
WHERE LEVEL+1=2
START WITH UPPER(E1.LAST_NAME) ='DE HAAN'
CONNECT BY PRIOR E1.EMPLOYEE_ID=E.EMPLOYEE_ID;

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, LEVEL
FROM EMPLOYEES E
WHERE LEVEL = 2
START WITH E.EMPLOYEE_ID = (SELECT E2.EMPLOYEE_ID FROM EMPLOYEES E2 WHERE LOWER(E2.LAST_NAME) = 'de haan')
CONNECT BY PRIOR E.EMPLOYEE_ID = E.MANAGER_ID;
--B
SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, LEVEL
FROM EMPLOYEES E
JOIN EMPLOYEES E1 ON E.MANAGER_ID=E1.EMPLOYEE_ID
START WITH UPPER(E1.LAST_NAME) ='DE HAAN'
CONNECT BY PRIOR E.EMPLOYEE_ID=E1.EMPLOYEE_ID;

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, LEVEL
FROM EMPLOYEES E
WHERE LEVEL > 1
START WITH E.EMPLOYEE_ID = (SELECT E2.EMPLOYEE_ID FROM EMPLOYEES E2 WHERE LOWER(E2.LAST_NAME) = 'de haan')
CONNECT BY PRIOR E.EMPLOYEE_ID = E.MANAGER_ID;

--4

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, LEVEL
FROM EMPLOYEES E
START WITH E.EMPLOYEE_ID=114
CONNECT BY PRIOR E.MANAGER_ID=E.EMPLOYEE_ID;

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, E.FIRST_NAME, LEVEL
FROM EMPLOYEES E
START WITH E.EMPLOYEE_ID = 114
CONNECT BY PRIOR E.EMPLOYEE_ID = E.MANAGER_ID;

--5

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, LEVEL
FROM EMPLOYEES E
WHERE LEVEL>2
START WITH UPPER(E.LAST_NAME)='DE HAAN'
CONNECT BY PRIOR E.EMPLOYEE_ID=E.MANAGER_ID;

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, E.FIRST_NAME, LEVEL
FROM EMPLOYEES E
WHERE LEVEL = 3
START WITH E.EMPLOYEE_ID = (SELECT E2.EMPLOYEE_ID FROM EMPLOYEES E2 WHERE LOWER(E2.LAST_NAME) = 'de haan')
CONNECT BY PRIOR E.EMPLOYEE_ID = E.MANAGER_ID;

--6

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, E.FIRST_NAME, LEVEL
FROM EMPLOYEES E
CONNECT BY PRIOR E.MANAGER_ID=E.EMPLOYEE_ID;

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, E.FIRST_NAME, LEVEL
FROM EMPLOYEES E
CONNECT BY PRIOR E.MANAGER_ID = E.EMPLOYEE_ID;

--7

SELECT
    E.EMPLOYEE_ID, E.MANAGER_ID, E.FIRST_NAME,
    (
    SELECT
        COUNT(*)
    FROM EMPLOYEES E1
    WHERE LEVEL>1
    START WITH E1.EMPLOYEE_ID=E.EMPLOYEE_ID
    CONNECT BY PRIOR E1.EMPLOYEE_ID=E1.MANAGER_ID
    ) NR_SUBALTERNI
FROM EMPLOYEES E;

SELECT
    f.employee_id,
    (
        SELECT COUNT(e.employee_id)
        FROM employees e
        WHERE LEVEL > 1
        START WITH e.employee_id = f.employee_id
        CONNECT BY PRIOR E.EMPLOYEE_ID = e.MANAGER_ID
    ) as nr
FROM employees f;

--8

WITH 
    TABEL AS(
    SELECT
        D.DEPARTMENT_NAME, SUM(E2.SALARY) SUMA
    FROM EMPLOYEES E2
    JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E2.DEPARTMENT_ID
    GROUP BY E2.DEPARTMENT_ID, D.DEPARTMENT_NAME
    )
SELECT
    *
FROM TABEL T
WHERE T.SUMA>(
    SELECT
        AVG(NVL(T1.SUMA,0))
    FROM TABEL T1
    );
    
WITH temp as
(
    SELECT
        d.department_name, NVL(SUM(e.salary),0) salariu
    FROM employees e
    JOIN departments d ON d.department_id = e.department_id
    GROUP BY d.department_name
)

SELECT
    t.department_name, t.salariu
FROM temp t
WHERE t.salariu > (
                    SELECT
                        AVG(NVL(t2.salariu,0))
                    FROM temp t2
                  );
    
--9
WITH 
    TABLE1 AS (
    SELECT
        (TO_CHAR(E.EMPLOYEE_ID)||' '||E.FIRST_NAME||' '||E.LAST_NAME) NUME, E.MANAGER_ID, E.JOB_ID, E.HIRE_DATE DATA_ANG
    FROM EMPLOYEES E
    WHERE LEVEL=2
    START WITH UPPER(E.FIRST_NAME)='STEVEN' AND UPPER(E.LAST_NAME)='KING'
    CONNECT BY PRIOR E.EMPLOYEE_ID=E.MANAGER_ID
    )
SELECT
    *
FROM TABLE1 T
WHERE T.DATA_ANG=(
    SELECT
        *
    FROM (
        SELECT 
            T1.DATA_ANG
        FROM TABLE1 T1
        ORDER BY T1.DATA_ANG 
        )
    WHERE ROWNUM=1
    );
    
WITH SUBORD AS (
    SELECT
        E.EMPLOYEE_ID, E.HIRE_DATE
    FROM EMPLOYEES E
    WHERE E.MANAGER_ID = (
            SELECT
                E1.EMPLOYEE_ID
            FROM EMPLOYEES E1
            WHERE UPPER(E1.FIRST_NAME) = 'STEVEN' AND UPPER(E1.LAST_NAME) = 'KING'
        )
    ORDER BY E.HIRE_DATE
),
DT AS (
    SELECT
        HIRE_DATE
    FROM SUBORD
    WHERE ROWNUM = 1
),
THEMP AS (
    SELECT
        EMPLOYEE_ID
    FROM SUBORD
    WHERE HIRE_DATE = (SELECT * FROM DT)
)
SELECT *
FROM EMPLOYEES
START WITH EMPLOYEE_ID IN (SELECT * FROM THEMP)
CONNECT BY PRIOR EMPLOYEE_ID = MANAGER_ID;
--10

WITH
    T AS(
    SELECT
        SUM(E.SALARY) SUMA, AVG(NVL(E.SALARY,0)) MEDIA, MIN(E.SALARY) MINIM, MAX(E.SALARY) MAXIM
    FROM EMPLOYEES E
    )
SELECT
    J.JOB_TITLE,(
        CASE
            WHEN UPPER(J.JOB_TITLE) LIKE 'S%' THEN (SELECT T.SUMA FROM T)
            WHEN J.JOB_ID IN (
                SELECT
                    E.JOB_ID
                FROM EMPLOYEES E
                WHERE E.SALARY=(SELECT T.MAXIM FROM T)
                )THEN (SELECT T.MEDIA FROM T)
            ELSE (SELECT T.MINIM FROM T)
        END
        ) CERINTA
FROM JOBS J;

WITH t_sum_sal AS (
    SELECT
        SUM(SALARY) val
    FROM EMPLOYEES
),
t_avg_sal AS (
    SELECT
        AVG(SALARY) val
    FROM EMPLOYEES
),
t_min_sal AS (
    SELECT
        MIN(SALARY) val
    FROM EMPLOYEES
)
SELECT
    J.JOB_ID,
    (CASE
        WHEN UPPER(J.JOB_ID) LIKE 'S%' THEN (SELECT t.val FROM t_sum_sal t)
        WHEN J.JOB_ID = (
                SELECT
                    E.JOB_ID
                FROM EMPLOYEES E
                WHERE E.SALARY = (
                        SELECT
                            MAX(E2.SALARY)
                        FROM EMPLOYEES E2
                    )
            ) THEN (SELECT t.val FROM t_avg_sal t)
        ELSE (SELECT t.val FROM t_min_sal t)
    END) CERINTA
FROM JOBS J;